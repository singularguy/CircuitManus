2025-05-10 09:59:22,147 - CircuitManusCore - INFO [CircuitManusCore.<module>:81] - Successfully configured file logging. Log messages will also be saved to: D:\资料\ALL IN AI\IDTAgent\IDT_Agent_Native\WebUIAgentLogs\agent_log_20250510_095922_146_P21996.log
2025-05-10 09:59:22,150 - __mp_main__ - INFO [server.<module>:24] - CircuitAgentV8_WS 模块导入成功。
2025-05-10 09:59:22,152 - __mp_main__ - INFO [server.<module>:76] - 静态文件目录 'D:\资料\ALL IN AI\IDTAgent\IDT_Agent_Native\static' 挂载成功。
2025-05-10 09:59:22,153 - __mp_main__ - INFO [server.<module>:94] - 成功获取 ZHIPUAI_API_KEY 环境变量。
2025-05-10 09:59:22,217 - asyncio - DEBUG [selector_events.__init__:54] - Using selector: SelectSelector
2025-05-10 09:59:22,320 - server - INFO [server.<module>:24] - CircuitAgentV8_WS 模块导入成功。
2025-05-10 09:59:22,320 - server - INFO [server.<module>:76] - 静态文件目录 'D:\资料\ALL IN AI\IDTAgent\IDT_Agent_Native\static' 挂载成功。
2025-05-10 09:59:22,321 - server - INFO [server.<module>:94] - 成功获取 ZHIPUAI_API_KEY 环境变量。
2025-05-10 09:59:30,523 - server - INFO [server.read_root:150] - 请求根路径 '/'，尝试提供 static/index.html。
2025-05-10 09:59:31,927 - server - INFO [server.websocket_endpoint:180] - WebSocket 连接已接受 (来自: 127.0.0.1:10070).
2025-05-10 09:59:32,003 - server - DEBUG [server.websocket_endpoint:230] - SERVER RECEIVED FROM CLIENT (Session session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff, Type: init): {'type': 'init', 'session_id': 'session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff', 'verbose': True}...
2025-05-10 09:59:32,003 - server - INFO [server.websocket_endpoint:238] - WebSocket 'init' 消息，使用客户端提供的 session_id: session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff (Verbose: True)
2025-05-10 09:59:32,004 - server - INFO [server.get_agent_instance:101] - 为 Session session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff 创建新的 AgentV8_WS 实例...
2025-05-10 09:59:32,004 - CircuitManusCore - INFO [CircuitManusCore.__init__:612] - 
============================== CircuitAgentV8_WS 初始化开始 (V8.0.2 Core, WebSocket) ==============================
2025-05-10 09:59:32,005 - CircuitManusCore - INFO [CircuitManusCore.__init__:617] - [AgentV8_WS Init] Agent verbose_mode (for callbacks): True
2025-05-10 09:59:32,005 - CircuitManusCore - INFO [CircuitManusCore.__init__:232] - [MemoryManager] 初始化记忆模块...
2025-05-10 09:59:32,006 - CircuitManusCore - INFO [CircuitManusCore.__init__:113] - [Circuit] 初始化电路实体。
2025-05-10 09:59:32,007 - CircuitManusCore - INFO [CircuitManusCore.__init__:120] - [Circuit] 电路实体初始化完成。
2025-05-10 09:59:32,007 - CircuitManusCore - INFO [CircuitManusCore.__init__:239] - [MemoryManager] 记忆模块初始化完成。短期上限: 25 条, 长期上限: 50 条。
2025-05-10 09:59:32,008 - CircuitManusCore - INFO [CircuitManusCore.__init__:288] - [LLMInterface] 初始化 LLM 接口，目标模型: glm-4-flash-250414
2025-05-10 09:59:32,139 - CircuitManusCore - INFO [CircuitManusCore.__init__:296] - [LLMInterface] 智谱 AI 客户端初始化成功。
2025-05-10 09:59:32,140 - CircuitManusCore - INFO [CircuitManusCore.__init__:303] - [LLMInterface] LLM 接口初始化完成 (Model: glm-4-flash-250414, Temp: 0.05, MaxTokens: 8190)。
2025-05-10 09:59:32,140 - CircuitManusCore - INFO [CircuitManusCore.__init__:365] - [OutputParserV8] 初始化输出解析器 (适配全新V8 JSON结构)。
2025-05-10 09:59:32,141 - CircuitManusCore - INFO [CircuitManusCore.__init__:489] - [ToolExecutor] 初始化工具执行器 (支持异步, 重试, 失败中止)。
2025-05-10 09:59:32,142 - CircuitManusCore - INFO [CircuitManusCore.__init__:498] - [ToolExecutor] 工具执行配置: 每个工具最多重试 2 次，重试间隔 1.5 秒。Verbose Mode: True
2025-05-10 09:59:32,143 - CircuitManusCore - INFO [CircuitManusCore.__init__:632] - [AgentV8_WS Init] 规划LLM重试: 3, 工具重试: 2, 重规划尝试: 2
2025-05-10 09:59:32,144 - CircuitManusCore - INFO [CircuitManusCore.__init__:634] - [AgentV8_WS Init] 正在动态发现并注册工具...
2025-05-10 09:59:32,144 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'add_component_tool'
2025-05-10 09:59:32,145 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'clear_circuit_tool'
2025-05-10 09:59:32,145 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'connect_components_tool'
2025-05-10 09:59:32,146 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'describe_circuit_tool'
2025-05-10 09:59:32,146 - CircuitManusCore - INFO [CircuitManusCore.__init__:642] - [AgentV8_WS Init] 共注册了 4 个工具。
2025-05-10 09:59:32,147 - CircuitManusCore - INFO [CircuitManusCore.__init__:643] - 
============================== CircuitAgentV8_WS 初始化成功 ==============================

2025-05-10 09:59:32,147 - server - INFO [server.get_agent_instance:114] - AgentV8_WS 实例为 Session session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff 创建成功 (Verbose: True)。
2025-05-10 09:59:32,147 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff, Type: init_success): WebSocket连接建立成功，Agent V8核心已准备就绪。...
2025-05-10 09:59:32,148 - server - INFO [server.websocket_endpoint:257] - Session session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff WebSocket初始化成功并发送确认。
2025-05-10 09:59:34,706 - server - INFO [server.websocket_endpoint:388] - Session session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff WebSocket连接已断开 (外部捕获): code=1001, reason='N/A'
2025-05-10 09:59:34,706 - server - INFO [server.websocket_endpoint:395] - Session session_1e6ac7e9-3bf5-4918-a477-9464f96cb4ff WebSocket连接处理结束 (客户端: 127.0.0.1:10070).
2025-05-10 09:59:38,611 - server - INFO [server.read_root:150] - 请求根路径 '/'，尝试提供 static/index.html。
2025-05-10 09:59:39,646 - server - INFO [server.websocket_endpoint:180] - WebSocket 连接已接受 (来自: 127.0.0.1:10087).
2025-05-10 09:59:39,687 - server - DEBUG [server.websocket_endpoint:230] - SERVER RECEIVED FROM CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: init): {'type': 'init', 'session_id': 'session_0f492549-c448-4397-a180-fab9244e9d51', 'verbose': True}...
2025-05-10 09:59:39,688 - server - INFO [server.websocket_endpoint:238] - WebSocket 'init' 消息，使用客户端提供的 session_id: session_0f492549-c448-4397-a180-fab9244e9d51 (Verbose: True)
2025-05-10 09:59:39,688 - server - INFO [server.get_agent_instance:101] - 为 Session session_0f492549-c448-4397-a180-fab9244e9d51 创建新的 AgentV8_WS 实例...
2025-05-10 09:59:39,689 - CircuitManusCore - INFO [CircuitManusCore.__init__:612] - 
============================== CircuitAgentV8_WS 初始化开始 (V8.0.2 Core, WebSocket) ==============================
2025-05-10 09:59:39,689 - CircuitManusCore - INFO [CircuitManusCore.__init__:617] - [AgentV8_WS Init] Agent verbose_mode (for callbacks): True
2025-05-10 09:59:39,690 - CircuitManusCore - INFO [CircuitManusCore.__init__:232] - [MemoryManager] 初始化记忆模块...
2025-05-10 09:59:39,690 - CircuitManusCore - INFO [CircuitManusCore.__init__:113] - [Circuit] 初始化电路实体。
2025-05-10 09:59:39,690 - CircuitManusCore - INFO [CircuitManusCore.__init__:120] - [Circuit] 电路实体初始化完成。
2025-05-10 09:59:39,691 - CircuitManusCore - INFO [CircuitManusCore.__init__:239] - [MemoryManager] 记忆模块初始化完成。短期上限: 25 条, 长期上限: 50 条。
2025-05-10 09:59:39,691 - CircuitManusCore - INFO [CircuitManusCore.__init__:288] - [LLMInterface] 初始化 LLM 接口，目标模型: glm-4-flash-250414
2025-05-10 09:59:39,734 - CircuitManusCore - INFO [CircuitManusCore.__init__:296] - [LLMInterface] 智谱 AI 客户端初始化成功。
2025-05-10 09:59:39,735 - CircuitManusCore - INFO [CircuitManusCore.__init__:303] - [LLMInterface] LLM 接口初始化完成 (Model: glm-4-flash-250414, Temp: 0.05, MaxTokens: 8190)。
2025-05-10 09:59:39,735 - CircuitManusCore - INFO [CircuitManusCore.__init__:365] - [OutputParserV8] 初始化输出解析器 (适配全新V8 JSON结构)。
2025-05-10 09:59:39,736 - CircuitManusCore - INFO [CircuitManusCore.__init__:489] - [ToolExecutor] 初始化工具执行器 (支持异步, 重试, 失败中止)。
2025-05-10 09:59:39,736 - CircuitManusCore - INFO [CircuitManusCore.__init__:498] - [ToolExecutor] 工具执行配置: 每个工具最多重试 2 次，重试间隔 1.5 秒。Verbose Mode: True
2025-05-10 09:59:39,736 - CircuitManusCore - INFO [CircuitManusCore.__init__:632] - [AgentV8_WS Init] 规划LLM重试: 3, 工具重试: 2, 重规划尝试: 2
2025-05-10 09:59:39,737 - CircuitManusCore - INFO [CircuitManusCore.__init__:634] - [AgentV8_WS Init] 正在动态发现并注册工具...
2025-05-10 09:59:39,737 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'add_component_tool'
2025-05-10 09:59:39,738 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'clear_circuit_tool'
2025-05-10 09:59:39,738 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'connect_components_tool'
2025-05-10 09:59:39,738 - CircuitManusCore - INFO [CircuitManusCore.__init__:639] - [AgentV8_WS Init] ✓ 已注册工具: 'describe_circuit_tool'
2025-05-10 09:59:39,739 - CircuitManusCore - INFO [CircuitManusCore.__init__:642] - [AgentV8_WS Init] 共注册了 4 个工具。
2025-05-10 09:59:39,739 - CircuitManusCore - INFO [CircuitManusCore.__init__:643] - 
============================== CircuitAgentV8_WS 初始化成功 ==============================

2025-05-10 09:59:39,739 - server - INFO [server.get_agent_instance:114] - AgentV8_WS 实例为 Session session_0f492549-c448-4397-a180-fab9244e9d51 创建成功 (Verbose: True)。
2025-05-10 09:59:39,740 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: init_success): WebSocket连接建立成功，Agent V8核心已准备就绪。...
2025-05-10 09:59:39,741 - server - INFO [server.websocket_endpoint:257] - Session session_0f492549-c448-4397-a180-fab9244e9d51 WebSocket初始化成功并发送确认。
2025-05-10 09:59:42,498 - server - DEBUG [server.websocket_endpoint:230] - SERVER RECEIVED FROM CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: message): {'type': 'message', 'session_id': 'session_0f492549-c448-4397-a180-fab9244e9d51', 'request_id': 'req_c1c42ac9-d194-4f15-8ee8-f226f1a9ceb4', 'content': '你实现一个简单的RC滤波电路 参数你自己决定', 'files': []}...
2025-05-10 09:59:42,498 - server - INFO [server.websocket_endpoint:286] - Session session_0f492549-c448-4397-a180-fab9244e9d51 收到用户消息: '你实现一个简单的RC滤波电路 参数你自己决定...' (ClientReqID: req_c1c42ac9-d194-4f15-8ee8-f226f1a9ceb4)
2025-05-10 09:59:42,499 - server - DEBUG [server.get_session_lock:144] - 为 Session session_0f492549-c448-4397-a180-fab9244e9d51 创建了新的锁。
2025-05-10 09:59:42,499 - server - INFO [server.websocket_endpoint:290] - Session session_0f492549-c448-4397-a180-fab9244e9d51 获取到锁，开始处理消息...
2025-05-10 09:59:42,500 - CircuitManusCore - INFO [CircuitManusCore.process_user_request:724] - 
========================= CircuitAgentV8_WS 开始处理用户请求 (ReqID: req_a0e9a7ad-287) =========================
2025-05-10 09:59:42,500 - CircuitManusCore - INFO [CircuitManusCore.process_user_request:725] - [OrchestratorV8_WS] 收到用户指令: "你实现一个简单的RC滤波电路 参数你自己决定"
2025-05-10 09:59:42,501 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 收到用户指令，开始处理......
2025-05-10 09:59:42,503 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:242] - [MemoryManager] 添加消息到短期记忆 (Role: user). 当前数量: 0
2025-05-10 09:59:42,503 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:258] - [MemoryManager] 添加后短期记忆数量: 1
2025-05-10 09:59:42,504 - CircuitManusCore - INFO [CircuitManusCore.process_user_request:756] - 
--- [规划/重规划阶段 V8_WS - ReqID: req_a0e9a7ad-287] 尝试第 1 ---
2025-05-10 09:59:42,504 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 开始规划任务 (V8 JSON)......
2025-05-10 09:59:42,505 - CircuitManusCore - DEBUG [CircuitManusCore.get_memory_context_for_prompt:271] - [MemoryManager] 正在格式化记忆上下文用于 Prompt...
2025-05-10 09:59:42,505 - CircuitManusCore - DEBUG [CircuitManusCore.get_state_description:163] - [Circuit] 正在生成电路状态描述...
2025-05-10 09:59:42,506 - CircuitManusCore - DEBUG [CircuitManusCore.get_memory_context_for_prompt:282] - [MemoryManager] 记忆上下文 (电路+长期) 格式化完成。
2025-05-10 09:59:42,506 - CircuitManusCore - INFO [CircuitManusCore.process_user_request:772] - [OrchestratorV8_WS - PlanAttempt 1 - ReqID: req_a0e9a7ad-287] 调用规划 LLM (LLM Call Attempt 1 of 4)...
2025-05-10 09:59:42,507 - CircuitManusCore - INFO [CircuitManusCore.call_llm:311] - [LLMInterface] 准备异步调用 LLM (glm-4-flash-250414, Phase: planning, Expecting V8 JSON)...
2025-05-10 09:59:42,507 - CircuitManusCore - DEBUG [CircuitManusCore.call_llm:312] - [LLMInterface] 发送的消息条数: 2
2025-05-10 09:59:42,508 - CircuitManusCore - DEBUG [CircuitManusCore.call_llm:322] - [LLMInterface] 发送给 LLM 的消息列表 (预览):
[
  {
    "index": 0,
    "role": "system",
    "content_preview": "您是一位顶尖的、极其严谨的电路设计编程助理 (Agent Version V8.0.2-WS)。您的行为必须专业、精确，并严格遵循指令。您的输出【必须】是一个符合下述V8规范的JSON对象，且该JSON对象需要被三个反引号和'json'标记包围 (即 ```json ... ```)。\n\n【核心任务：规划阶段】\n分析用户的最新指令、完整的对话历史（包括您之前的思考、规划以及所有工具执行结果）、当前的电路状态和记忆。然后，生成一个V8 JSON对象作为您的行动计划或直接回复。\n\n【V8 JSON 输出格式规范 (必须严格遵守)】\n```json\n{\n  \"request_id\": \"string..."
  },
  {
    "index": 1,
    "role": "user",
    "content_preview": "你实现一个简单的RC滤波电路 参数你自己决定"
  }
]
2025-05-10 09:59:42,509 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 正在与智能大脑沟通 (planning)......
2025-05-10 09:59:42,519 - httpcore.connection - DEBUG [_trace.trace:47] - connect_tcp.started host='127.0.0.1' port=5895 local_address=None timeout=8.0 socket_options=None
2025-05-10 09:59:42,521 - httpcore.connection - DEBUG [_trace.trace:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000222A88732B0>
2025-05-10 09:59:42,522 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_headers.started request=<Request [b'CONNECT']>
2025-05-10 09:59:42,523 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_headers.complete
2025-05-10 09:59:42,523 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_body.started request=<Request [b'CONNECT']>
2025-05-10 09:59:42,524 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_body.complete
2025-05-10 09:59:42,524 - httpcore.http11 - DEBUG [_trace.trace:47] - receive_response_headers.started request=<Request [b'CONNECT']>
2025-05-10 09:59:42,526 - httpcore.http11 - DEBUG [_trace.trace:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-05-10 09:59:42,527 - httpcore.proxy - DEBUG [_trace.trace:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000222A8803C40> server_hostname='open.bigmodel.cn' timeout=8.0
2025-05-10 09:59:43,166 - httpcore.proxy - DEBUG [_trace.trace:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000222A88732E0>
2025-05-10 09:59:43,167 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-10 09:59:43,169 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_headers.complete
2025-05-10 09:59:43,169 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_body.started request=<Request [b'POST']>
2025-05-10 09:59:43,170 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_body.complete
2025-05-10 09:59:43,170 - httpcore.http11 - DEBUG [_trace.trace:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-10 09:59:56,778 - httpcore.http11 - DEBUG [_trace.trace:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 10 May 2025 02:00:52 GMT'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Set-Cookie', b'acw_tc=1a0c66dc17468424394248826e006e55f97b88950cf9e7ee0a5c161552238e;path=/;HttpOnly;Max-Age=1800'), (b'Vary', b'Accept-Encoding'), (b'Vary', b'Origin'), (b'Vary', b'Access-Control-Request-Method'), (b'Vary', b'Access-Control-Request-Headers'), (b'X-LOG-ID', b'2025051010003953ce2430a3344152'), (b'Vary', b'Origin'), (b'Vary', b'Access-Control-Request-Method'), (b'Vary', b'Access-Control-Request-Headers'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains'), (b'Content-Encoding', b'gzip')])
2025-05-10 09:59:56,781 - httpcore.http11 - DEBUG [_trace.trace:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-10 09:59:56,783 - httpcore.http11 - DEBUG [_trace.trace:47] - receive_response_body.complete
2025-05-10 09:59:56,784 - httpcore.http11 - DEBUG [_trace.trace:47] - response_closed.started
2025-05-10 09:59:56,784 - httpcore.http11 - DEBUG [_trace.trace:47] - response_closed.complete
2025-05-10 09:59:56,791 - CircuitManusCore - INFO [CircuitManusCore.call_llm:337] - [LLMInterface] LLM 异步调用成功。耗时: 14.281 秒。
2025-05-10 09:59:56,792 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 与智能大脑沟通完成 (planning)。...
2025-05-10 09:59:56,792 - CircuitManusCore - INFO [CircuitManusCore.call_llm:343] - [LLMInterface] Token 统计: Prompt=2712, Completion=460, Total=3172
2025-05-10 09:59:56,793 - CircuitManusCore - INFO [CircuitManusCore.call_llm:346] - [LLMInterface] 完成原因: stop
2025-05-10 09:59:56,794 - CircuitManusCore - DEBUG [CircuitManusCore.call_llm:349] - [LLMInterface] LLM 原始响应内容 (预览前10000字符):
```json
{
  "request_id": "req_a0e9a7ad-287",
  "llm_interaction_id": "plan_llm_id_0fcfe5f6_rc_filter",
  "timestamp_utc": "2025-05-10T01:59:42.506955+00:00",
  "status": "success",
  "execution_phase": "planning",
  "thought_process": "用户要求实现一个简单的RC滤波电路。RC滤波电路由一个电阻和一个电容组成，通常用于去除信号中的高频噪声。我将选择一个常见的参数组合：电阻值为1kΩ，电容值为100nF。这个组合可以提供一个大约1.6kHz的截止频率，适用于许多简单的滤波应用。我将使用 add_component_tool 添加电阻和电容，并使用 connect_components_tool 将它们连接起来。",
  "decision": {
    "IS_CALL_TOOLS": true,
    "TOOL_CALL_REQUESTS": [
      {
        "tool_call_id": "tc_add_r1_cd1b0df4",
        "tool_name": "add_component_tool",
        "tool_arguments": {"component_type": "电阻", "component_id": "R1", "value": "1kΩ"}
      },
      {
        "tool_call_id": "tc_add_c1_c6acc880",
        "tool_name": "add_component_tool",
        "tool_arguments": {"component_type": "电容", "component_id": "C1", "value": "100nF"}
      },
      {
        "tool_call_id": "tc_conn_r1c1_48606642",
        "tool_name": "connect_components_tool",
        "tool_arguments": {"comp1_id": "R1", "comp2_id": "C1"}
      }
    ],
    "RESPONSE_TO_USER": {
      "content_type": "text/plain",
      "content": "好的，我正在为您添加电阻R1 (1kΩ) 和电容C1 (100nF)，并将它们连接起来以形成一个RC滤波电路...",
      "suggestions_for_next_steps": []
    }
  },
  "usage_metadata": null
}
```
2025-05-10 09:59:56,795 - CircuitManusCore - DEBUG [CircuitManusCore.parse_llm_response_to_structured_json:369] - [parse_cc25fe38-OutputParserV8] 开始解析 LLM 响应 (Phase: planning)...
2025-05-10 09:59:56,795 - CircuitManusCore - DEBUG [CircuitManusCore.parse_llm_response_to_structured_json:384] - [parse_cc25fe38-OutputParserV8] 接收到的原始 LLM content (预览前 10000 字符):
```json
{
  "request_id": "req_a0e9a7ad-287",
  "llm_interaction_id": "plan_llm_id_0fcfe5f6_rc_filter",
  "timestamp_utc": "2025-05-10T01:59:42.506955+00:00",
  "status": "success",
  "execution_phase": "planning",
  "thought_process": "用户要求实现一个简单的RC滤波电路。RC滤波电路由一个电阻和一个电容组成，通常用于去除信号中的高频噪声。我将选择一个常见的参数组合：电阻值为1kΩ，电容值为100nF。这个组合可以提供一个大约1.6kHz的截止频率，适用于许多简单的滤波应用。我将使用 add_component_tool 添加电阻和电容，并使用 connect_components_tool 将它们连接起来。",
  "decision": {
    "IS_CALL_TOOLS": true,
    "TOOL_CALL_REQUESTS": [
      {
        "tool_call_id": "tc_add_r1_cd1b0df4",
        "tool_name": "add_component_tool",
        "tool_arguments": {"component_type": "电阻", "component_id": "R1", "value": "1kΩ"}
      },
      {
        "tool_call_id": "tc_add_c1_c6acc880",
        "tool_name": "add_component_tool",
        "tool_arguments": {"component_type": "电容", "component_id": "C1", "value": "100nF"}
      },
      {
        "tool_call_id": "tc_conn_r1c1_48606642",
        "tool_name": "connect_components_tool",
        "tool_arguments": {"comp1_id": "R1", "comp2_id": "C1"}
      }
    ],
    "RESPONSE_TO_USER": {
      "content_type": "text/plain",
      "content": "好的，我正在为您添加电阻R1 (1kΩ) 和电容C1 (100nF)，并将它们连接起来以形成一个RC滤波电路...",
      "suggestions_for_next_steps": []
    }
  },
  "usage_metadata": null
}
```
2025-05-10 09:59:56,797 - CircuitManusCore - DEBUG [CircuitManusCore.parse_llm_response_to_structured_json:390] - [parse_cc25fe38-OutputParserV8] 从 Markdown 代码块中提取到 JSON 字符串。
2025-05-10 09:59:56,797 - CircuitManusCore - DEBUG [CircuitManusCore.parse_llm_response_to_structured_json:403] - [parse_cc25fe38-OutputParserV8] 预处理后，准备解析的 JSON 字符串 (预览前 10000 字符):
{
  "request_id": "req_a0e9a7ad-287",
  "llm_interaction_id": "plan_llm_id_0fcfe5f6_rc_filter",
  "timestamp_utc": "2025-05-10T01:59:42.506955+00:00",
  "status": "success",
  "execution_phase": "planning",
  "thought_process": "用户要求实现一个简单的RC滤波电路。RC滤波电路由一个电阻和一个电容组成，通常用于去除信号中的高频噪声。我将选择一个常见的参数组合：电阻值为1kΩ，电容值为100nF。这个组合可以提供一个大约1.6kHz的截止频率，适用于许多简单的滤波应用。我将使用 add_component_tool 添加电阻和电容，并使用 connect_components_tool 将它们连接起来。",
  "decision": {
    "IS_CALL_TOOLS": true,
    "TOOL_CALL_REQUESTS": [
      {
        "tool_call_id": "tc_add_r1_cd1b0df4",
        "tool_name": "add_component_tool",
        "tool_arguments": {"component_type": "电阻", "component_id": "R1", "value": "1kΩ"}
      },
      {
        "tool_call_id": "tc_add_c1_c6acc880",
        "tool_name": "add_component_tool",
        "tool_arguments": {"component_type": "电容", "component_id": "C1", "value": "100nF"}
      },
      {
        "tool_call_id": "tc_conn_r1c1_48606642",
        "tool_name": "connect_components_tool",
        "tool_arguments": {"comp1_id": "R1", "comp2_id": "C1"}
      }
    ],
    "RESPONSE_TO_USER": {
      "content_type": "text/plain",
      "content": "好的，我正在为您添加电阻R1 (1kΩ) 和电容C1 (100nF)，并将它们连接起来以形成一个RC滤波电路...",
      "suggestions_for_next_steps": []
    }
  },
  "usage_metadata": null
}
2025-05-10 09:59:56,798 - CircuitManusCore - INFO [CircuitManusCore.parse_llm_response_to_structured_json:407] - [parse_cc25fe38-OutputParserV8] JSON 字符串成功解析为字典。
2025-05-10 09:59:56,799 - CircuitManusCore - DEBUG [CircuitManusCore.parse_llm_response_to_structured_json:481] - [parse_cc25fe38-OutputParserV8] 成功提取 'thought_process' (预览前300字符):
用户要求实现一个简单的RC滤波电路。RC滤波电路由一个电阻和一个电容组成，通常用于去除信号中的高频噪声。我将选择一个常见的参数组合：电阻值为1kΩ，电容值为100nF。这个组合可以提供一个大约1.6kHz的截止频率，适用于许多简单的滤波应用。我将使用 add_component_tool 添加电阻和电容，并使用 connect_components_tool 将它们连接起来。
2025-05-10 09:59:56,800 - CircuitManusCore - INFO [CircuitManusCore.parse_llm_response_to_structured_json:483] - [parse_cc25fe38-OutputParserV8] LLM 响应 (Phase: planning, LLM_ID: plan_llm_id_0fcfe5f6_rc_filter) 已成功解析并验证为V8 JSON结构！
2025-05-10 09:59:56,800 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: thinking_log): 用户要求实现一个简单的RC滤波电路。RC滤波电路由一个电阻和一个电容组成，通常用于去除信号中的高频噪声。我将选择一个常见的参数组合：电阻值为1kΩ，电容值为100nF。这个组合可以提供一个大约1.6k...
2025-05-10 09:59:56,801 - CircuitManusCore - INFO [CircuitManusCore.process_user_request:787] - [OrchestratorV8_WS - PlanAttempt 1 - ReqID: req_a0e9a7ad-287] 成功解析并验证V8 JSON计划。LLM报告状态为 'success' (LLM_ID: plan_llm_id_0fcfe5f6_rc_filter)。
2025-05-10 09:59:56,803 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:242] - [MemoryManager] 添加消息到短期记忆 (Role: assistant). 当前数量: 1
2025-05-10 09:59:56,804 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:258] - [MemoryManager] 添加后短期记忆数量: 2
2025-05-10 09:59:56,805 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 规划完成 (V8 JSON)。...
2025-05-10 09:59:56,805 - CircuitManusCore - INFO [CircuitManusCore.process_user_request:864] - [OrchestratorV8_WS - PlanAttempt 1 - ReqID: req_a0e9a7ad-287] 决策：执行 3 个工具。
2025-05-10 09:59:56,806 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 开始执行 3 个计划操作......
2025-05-10 09:59:56,807 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: interim_response): 好的，我正在为您添加电阻R1 (1kΩ) 和电容C1 (100nF)，并将它们连接起来以形成一个RC滤波电路......
2025-05-10 09:59:56,807 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:501] - [ToolExecutor] 准备异步执行 3 个工具调用请求 (按顺序，支持重试，失败中止)...
2025-05-10 09:59:56,808 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:521] - [ToolExecutor] 处理工具调用 1/3: Name='add_component_tool', LLM_ToolCallID='tc_add_r1_cd1b0df4'
2025-05-10 09:59:56,809 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:522] - [ToolExecutor] 待执行工具 'add_component_tool' 的参数: {'component_type': '电阻', 'component_id': 'R1', 'value': '1kΩ'}
2025-05-10 09:59:56,810 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 正在执行操作: Add Component (步骤 1, ID: tc_add_r1_cd1b0df4)......
2025-05-10 09:59:56,811 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:551] - [ToolExecutor] >>> 正在调用 Action 方法: 'add_component_tool' (ID: tc_add_r1_cd1b0df4, Attempt 1) with params: {'component_type': '电阻', 'component_id': 'R1', 'value': '1kΩ'}
2025-05-10 09:59:56,811 - CircuitManusCore - INFO [CircuitManusCore.add_component_tool:651] - [Action: AddComponent] 执行添加元件操作。
2025-05-10 09:59:56,812 - CircuitManusCore - DEBUG [CircuitManusCore.add_component_tool:652] - [Action: AddComponent] 收到参数: {'component_type': '电阻', 'component_id': 'R1', 'value': '1kΩ'}
2025-05-10 09:59:56,813 - CircuitManusCore - DEBUG [CircuitManusCore.__init__:101] - 成功创建元件对象: 元件: 电阻 (ID: R1) (值: 1kΩ)
2025-05-10 09:59:56,813 - CircuitManusCore - DEBUG [CircuitManusCore.add_component:126] - [Circuit] 元件 'R1' 已添加到电路。
2025-05-10 09:59:56,814 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_long_term:261] - [MemoryManager] 添加知识到长期记忆: '添加了元件: 元件: 电阻 (ID: R1) (值: 1kΩ)'. 当前数量: 0
2025-05-10 09:59:56,815 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_long_term:266] - [MemoryManager] 添加后长期记忆数量: 1
2025-05-10 09:59:56,816 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:560] - [ToolExecutor] Action 'add_component_tool' 执行完毕 (Attempt 1)。状态: success
2025-05-10 09:59:56,817 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:588] - [ToolExecutor] 已记录工具 'tc_add_r1_cd1b0df4' 的最终执行结果。
2025-05-10 09:59:56,817 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 操作 'Add Component' 完成。结果: 操作成功: 已添加元件 元件: 电阻 (ID: R1) (值: 1kΩ)。 (使用指定ID 'R1')...
2025-05-10 09:59:56,818 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:521] - [ToolExecutor] 处理工具调用 2/3: Name='add_component_tool', LLM_ToolCallID='tc_add_c1_c6acc880'
2025-05-10 09:59:56,819 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:522] - [ToolExecutor] 待执行工具 'add_component_tool' 的参数: {'component_type': '电容', 'component_id': 'C1', 'value': '100nF'}
2025-05-10 09:59:56,819 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 正在执行操作: Add Component (步骤 2, ID: tc_add_c1_c6acc880)......
2025-05-10 09:59:56,820 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:551] - [ToolExecutor] >>> 正在调用 Action 方法: 'add_component_tool' (ID: tc_add_c1_c6acc880, Attempt 1) with params: {'component_type': '电容', 'component_id': 'C1', 'value': '100nF'}
2025-05-10 09:59:56,831 - CircuitManusCore - INFO [CircuitManusCore.add_component_tool:651] - [Action: AddComponent] 执行添加元件操作。
2025-05-10 09:59:56,831 - CircuitManusCore - DEBUG [CircuitManusCore.add_component_tool:652] - [Action: AddComponent] 收到参数: {'component_type': '电容', 'component_id': 'C1', 'value': '100nF'}
2025-05-10 09:59:56,832 - CircuitManusCore - DEBUG [CircuitManusCore.__init__:101] - 成功创建元件对象: 元件: 电容 (ID: C1) (值: 100nF)
2025-05-10 09:59:56,832 - CircuitManusCore - DEBUG [CircuitManusCore.add_component:126] - [Circuit] 元件 'C1' 已添加到电路。
2025-05-10 09:59:56,833 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_long_term:261] - [MemoryManager] 添加知识到长期记忆: '添加了元件: 元件: 电容 (ID: C1) (值: 100nF)'. 当前数量: 1
2025-05-10 09:59:56,834 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_long_term:266] - [MemoryManager] 添加后长期记忆数量: 2
2025-05-10 09:59:56,834 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:560] - [ToolExecutor] Action 'add_component_tool' 执行完毕 (Attempt 1)。状态: success
2025-05-10 09:59:56,835 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:588] - [ToolExecutor] 已记录工具 'tc_add_c1_c6acc880' 的最终执行结果。
2025-05-10 09:59:56,835 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 操作 'Add Component' 完成。结果: 操作成功: 已添加元件 元件: 电容 (ID: C1) (值: 100nF)。 (使用指定ID 'C1')...
2025-05-10 09:59:56,836 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:521] - [ToolExecutor] 处理工具调用 3/3: Name='connect_components_tool', LLM_ToolCallID='tc_conn_r1c1_48606642'
2025-05-10 09:59:56,836 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:522] - [ToolExecutor] 待执行工具 'connect_components_tool' 的参数: {'comp1_id': 'R1', 'comp2_id': 'C1'}
2025-05-10 09:59:56,837 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 正在执行操作: Connect Components (步骤 3, ID: tc_conn_r1c1_48606642)......
2025-05-10 09:59:56,838 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:551] - [ToolExecutor] >>> 正在调用 Action 方法: 'connect_components_tool' (ID: tc_conn_r1c1_48606642, Attempt 1) with params: {'comp1_id': 'R1', 'comp2_id': 'C1'}
2025-05-10 09:59:56,839 - CircuitManusCore - INFO [CircuitManusCore.connect_components_tool:685] - [Action: ConnectComponents] 执行连接。 参数: {'comp1_id': 'R1', 'comp2_id': 'C1'}
2025-05-10 09:59:56,839 - CircuitManusCore - DEBUG [CircuitManusCore.connect_components:149] - [Circuit] 添加了连接: R1 <--> C1.
2025-05-10 09:59:56,840 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_long_term:261] - [MemoryManager] 添加知识到长期记忆: '连接了: R1<->C1'. 当前数量: 2
2025-05-10 09:59:56,840 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_long_term:266] - [MemoryManager] 添加后长期记忆数量: 3
2025-05-10 09:59:56,841 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:560] - [ToolExecutor] Action 'connect_components_tool' 执行完毕 (Attempt 1)。状态: success
2025-05-10 09:59:56,841 - CircuitManusCore - DEBUG [CircuitManusCore.execute_tool_calls:588] - [ToolExecutor] 已记录工具 'tc_conn_r1c1_48606642' 的最终执行结果。
2025-05-10 09:59:56,842 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 操作 'Connect Components' 完成。结果: 操作成功: 'R1' 与 'C1' 已连接。...
2025-05-10 09:59:56,843 - CircuitManusCore - INFO [CircuitManusCore.execute_tool_calls:602] - [ToolExecutor] 工具执行完成。共处理了 3/3 个计划中的工具。
2025-05-10 09:59:56,843 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:242] - [MemoryManager] 添加消息到短期记忆 (Role: tool). 当前数量: 2
2025-05-10 09:59:56,844 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:258] - [MemoryManager] 添加后短期记忆数量: 3
2025-05-10 09:59:56,844 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:242] - [MemoryManager] 添加消息到短期记忆 (Role: tool). 当前数量: 3
2025-05-10 09:59:56,845 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:258] - [MemoryManager] 添加后短期记忆数量: 4
2025-05-10 09:59:56,845 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:242] - [MemoryManager] 添加消息到短期记忆 (Role: tool). 当前数量: 4
2025-05-10 09:59:56,846 - CircuitManusCore - DEBUG [CircuitManusCore.add_to_short_term:258] - [MemoryManager] 添加后短期记忆数量: 5
2025-05-10 09:59:56,846 - CircuitManusCore - INFO [CircuitManusCore.process_user_request:906] - [OrchestratorV8_WS - PlanAttempt 1 - ReqID: req_a0e9a7ad-287] 所有计划中的工具成功执行。准备生成最终回复。
2025-05-10 09:59:56,847 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 正在总结结果并生成最终回复 (V8 JSON)......
2025-05-10 09:59:56,848 - CircuitManusCore - DEBUG [CircuitManusCore.get_memory_context_for_prompt:271] - [MemoryManager] 正在格式化记忆上下文用于 Prompt...
2025-05-10 09:59:56,848 - CircuitManusCore - DEBUG [CircuitManusCore.get_state_description:163] - [Circuit] 正在生成电路状态描述...
2025-05-10 09:59:56,849 - CircuitManusCore - DEBUG [CircuitManusCore.get_state_description:178] - [Circuit] 电路状态描述生成完毕。
2025-05-10 09:59:56,850 - CircuitManusCore - DEBUG [CircuitManusCore.get_memory_context_for_prompt:279] - [MemoryManager] 已提取最近 3 条长期记忆 (基础模式)。
2025-05-10 09:59:56,850 - CircuitManusCore - DEBUG [CircuitManusCore.get_memory_context_for_prompt:282] - [MemoryManager] 记忆上下文 (电路+长期) 格式化完成。
2025-05-10 09:59:56,851 - CircuitManusCore - INFO [CircuitManusCore.call_llm:311] - [LLMInterface] 准备异步调用 LLM (glm-4-flash-250414, Phase: response_generation, Expecting V8 JSON)...
2025-05-10 09:59:56,851 - CircuitManusCore - DEBUG [CircuitManusCore.call_llm:312] - [LLMInterface] 发送的消息条数: 6
2025-05-10 09:59:56,852 - CircuitManusCore - DEBUG [CircuitManusCore.call_llm:322] - [LLMInterface] 发送给 LLM 的消息列表 (预览):
[
  {
    "index": 0,
    "role": "system",
    "content_preview": "您是一位顶尖的电路设计编程助理 (Agent Version V8.0.2-WS)，经验丰富，技术精湛，并且极其擅长清晰、准确、诚实地汇报工作结果。您的输出【必须】是一个符合下述V8规范的JSON对象，且该JSON对象需要被三个反引号和'json'标记包围 (即 ```json ... ```)。\n\n【核心任务：响应生成阶段】\n您当前的任务是：基于到目前为止的【完整对话历史】（包括用户最初的指令、您在规划阶段生成的V8 JSON计划、以及所有【已执行工具的结果详情】，这些工具结果是以 'role: tool', 'tool_call_id: ...', 'name: ...', 'conten..."
  },
  {
    "index": 1,
    "role": "user",
    "content_preview": "你实现一个简单的RC滤波电路 参数你自己决定"
  },
  {
    "index": 2,
    "role": "assistant",
    "content_preview": "```json\n{\n  \"request_id\": \"req_a0e9a7ad-287\",\n  \"llm_interaction_id\": \"plan_llm_id_0fcfe5f6_rc_filter\",\n  \"timestamp_utc\": \"2025-05-10T01:59:42.506955+00:00\",\n  \"status\": \"success\",\n  \"execution_phase\": \"planning\",\n  \"thought_process\": \"用户要求实现一个简单的RC滤波电路。RC滤波电路由一个电阻和一个电容组成，通常用于去除信号中的高频噪声。我将选择一个常见的参数..."
  },
  {
    "index": 3,
    "role": "tool",
    "content_preview": "{\"status\": \"success\", \"message\": \"操作成功: 已添加元件 元件: 电阻 (ID: R1) (值: 1kΩ)。 (使用指定ID 'R1')\", \"data\": {\"id\": \"R1\", \"type\": \"电阻\", \"value\": \"1kΩ\"}}"
  },
  {
    "index": 4,
    "role": "tool",
    "content_preview": "{\"status\": \"success\", \"message\": \"操作成功: 已添加元件 元件: 电容 (ID: C1) (值: 100nF)。 (使用指定ID 'C1')\", \"data\": {\"id\": \"C1\", \"type\": \"电容\", \"value\": \"100nF\"}}"
  },
  {
    "index": 5,
    "role": "tool",
    "content_preview": "{\"status\": \"success\", \"message\": \"操作成功: 'R1' 与 'C1' 已连接。\", \"data\": {\"connection\": [\"C1\", \"R1\"]}}"
  }
]
2025-05-10 09:59:56,853 - server - DEBUG [server.send_status_update_to_client:210] - SERVER SENDING TO CLIENT (Session session_0f492549-c448-4397-a180-fab9244e9d51, Type: status): 正在与智能大脑沟通 (response_generation)......
2025-05-10 09:59:56,856 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-10 09:59:56,857 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_headers.complete
2025-05-10 09:59:56,858 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_body.started request=<Request [b'POST']>
2025-05-10 09:59:56,859 - httpcore.http11 - DEBUG [_trace.trace:47] - send_request_body.complete
2025-05-10 09:59:56,859 - httpcore.http11 - DEBUG [_trace.trace:47] - receive_response_headers.started request=<Request [b'POST']>
